#==============================================================================
# Common
#==============================================================================

# The host on which the JobManager runs. Only used in non-high-availability mode.
# The JobManager process will use this hostname to bind the listening servers to.
# The TaskManagers will try to connect to the JobManager on that host.

jobmanager.rpc.address: jm_hostname


# The port where the JobManager's main actor system listens for messages.
jobmanager.rpc.port: 6123


# The heap size for the JobManager JVM
jobmanager.heap.mb: jm_heap

# The heap size for the TaskManager JVM
taskmanager.heap.mb: tm_heap

# The number of task slots that each TaskManager offers. Each slot runs one parallel pipeline.
taskmanager.numberOfTaskSlots: tm_slots


# The parallelism used for programs that did not specify and other parallelism.
parallelism.default: 1

#==============================================================================
# Web Frontend
#==============================================================================

# The port under which the web-based runtime monitor listens.
# A value of -1 deactivates the web server.
jobmanager.web.port: 8081

# The port uder which the standalone web client
# (for job upload and submit) listens.
webclient.port: 8080


#==============================================================================
# Streaming state checkpointing
#==============================================================================

# The backend that will be used to store operator state checkpoints if 
# checkpointing is enabled. 
#
# Supported backends: jobmanager, filesystem, <class-name-of-factory> 
#
#state.backend: filesystem
state.backend: jobmanager

#Directory for storing checkpoints in a Flink-supported filesystem
# Note: State backend must be accessible from the JobManager and all TaskManagers.
# Use "hdfs://" for HDFS setups, "file://" for UNIX/POSIX-compliant file systems,
# (or any local file system under Windows), or "S3://" for S3 file system.
#
#state.backend.fs.checkpointdir: hdfs:///user/root/flink/checkpoints

#==============================================================================
# Master High Availability (required configuration)
#==============================================================================

# The list of ZooKepper quorum peers that coordinate the high-availability
# setup. This must be a list of the form:
# "host1:clientPort,host2[:clientPort],..." (default clientPort: 2181)
#
#recovery.mode: zookeeper
#
#recovery.zookeeper.quorum: ips
#recovery.zookeeper.path.root: /flink
#
# Note: You need to set the state backend to 'filesystem' and the checkpoint
# directory (see above) before configuring the storageDir.
#
#recovery.zookeeper.storageDir: hdfs:///user/root/flink/recovery
#yarn.application-attempts: 10



